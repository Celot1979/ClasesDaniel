1) Define una función que convierta grados en radianes.

2) Diseña una función que calcule el sumatorio de la diferencia entre números contiguos
en una lista. Por ejemplo, para la lista [1, 3, 6, 10] devolverá 9, que es 2 + 3 + 4 (el 2 resulta
de calcular 3 − 1, el 3 de calcular 6 − 3 y el 4 de calcular 10 − 6)

3) Diseña una función que, dada una lista de números enteros, devuelva el número de
((series)) que hay en ella. Llamamos ((serie)) a todo tramo de la lista con valores idénticos.
Por ejemplo, la lista [1, 1, 8, 8, 8, 8, 0, 0, 0, 2, 10, 10] tiene 5 ((series)) (ten en cuenta
que el 2 forma parte de una ((serie)) de un solo elemento).

4) Diseña una función que devuelva el valor absoluto de la máxima diferencia entre dos ele-
mentos consecutivos de una lista. Por ejemplo, el valor devuelto para la lista [1, 10, 2, 6, 2, 0]
es 9, pues es la diferencia entre el valor 1 y el valor 10


5) Diseña una función que, dada una lista de cadenas, devuelva la cadena más larga. Si
dos o más cadenas miden lo mismo y son las más largas, la función devolverá una cualquiera
de ellas.
(Ejemplo: dada la lista [’Pepe’, ’Juan’, ’Marı́a’, ’Ana’], la función devolverá la cadena
’Marı́a’.)

6) Diseña una función que diga (mediante la devolución de True o False) si dos números
son amigos. Dos números son amigos si la suma de los divisores del primero (excluı́do él) es
igual al segundo y viceversa

7) Diseña una función que reciba dos listas y devuelva los elementos comunes a ambas,
sin repetir ninguno (intersección de conjuntos).
Ejemplo: si recibe las listas [1, 2, 1] y [2, 3, 2, 4], devolverá la lista [2].

8)Diseña una función que reciba dos listas y devuelva los elementos que pertenecen a una
o a otra, pero sin repetir ninguno (unión de conjuntos).
Ejemplo: si recibe las listas [1, 2, 1] y [2, 3, 2, 4], devolverá la lista [1, 2, 3, 4].

9) Diseña una función que reciba dos listas y devuelva los elementos que pertenecen a la
primera pero no a la segunda, sin repetir ninguno (diferencia de conjuntos).
Ejemplo: si recibe las listas [1, 2, 1] y [2, 3, 2, 4], devolverá la lista [1].

10) Diseña una función que, dada una lista de números, devuelva otra lista que sólo incluya
sus números impares.

11) Diseña una función que, dada una lista de nombres y una letra, devuelva una lista con
todos los nombres que empiezan por dicha letra.

12) Diseña una función que, dada una lista de números, devuelva otra lista con sólo aquellos
números de la primera que son primos
